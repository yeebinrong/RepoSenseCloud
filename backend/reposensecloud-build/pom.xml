<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.hamburger.company</groupId>
    <artifactId>reposensecloud-build</artifactId>
    <packaging>pom</packaging>
    <version>1.0.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.source.version>1.8</java.source.version>
        <java.target.version>1.8</java.target.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.version>3.5.1</maven.compiler.version>
        <maven-jar-plugin.version>3.1.2</maven-jar-plugin.version>
        <maven-source-plugin.version>3.0.1</maven-source-plugin.version>
        <min.line.coverage.ratio>0.80</min.line.coverage.ratio>
        <min.branch.coverage.ratio>0.80</min.branch.coverage.ratio>
        <jacoco.version>0.8.4</jacoco.version>
        <lombok.version>1.18.4</lombok.version>
        <log4j-core.version>2.17.2</log4j-core.version>
        <log4j-api.version>2.17.2</log4j-api.version>
        <log4j-slf4j-impl.version>2.17.2</log4j-slf4j-impl.version>
        <awsjavasdk.version>1.12.268</awsjavasdk.version>
        <aws-lambda-java-log4j2.version>1.5.1</aws-lambda-java-log4j2.version>
        <com.amazonaws.aws-lambda-java-core.version>1.2.1</com.amazonaws.aws-lambda-java-core.version>
        <!-- whether skip dependency:analyze-dep-mgt, dependency:analyze-duplicate
          at validate phase -->
        <analyze.dependency.skip>false</analyze.dependency.skip>
        <analyze.dependency.failBuild>true</analyze.dependency.failBuild>
        <!-- whether skip dependency:analyze-only at verify phase -->
        <analyze.used.library.skip>false</analyze.used.library.skip>
        <analyze.used.library.failOnWarning>true</analyze.used.library.failOnWarning>
        <!-- whether skip dependency version validation at validate phase -->
        <validate.library.version.skip>false</validate.library.version.skip>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.hamburger.company</groupId>
                <artifactId>reposensecloud-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.hamburger.company</groupId>
                <artifactId>reposensecloud-common</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.hamburger.company</groupId>
                <artifactId>reposensecloud-logging</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- 3rd party libraries -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>${log4j-core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
                <version>${log4j-api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-slf4j-impl</artifactId>
                <version>${log4j-slf4j-impl.version}</version>
            </dependency>
            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>aws-lambda-java-log4j2</artifactId>
                <version>${aws-lambda-java-log4j2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven-jar-plugin.version}</version>
            </dependency>
            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>aws-lambda-java-core</artifactId>
                <version>${com.amazonaws.aws-lambda-java-core.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

<build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <!--  Note: Normally, this plugin would be run using
                    "mvn compile assembly:single" but the execution
                    clause below binds it to the normal 'package' lifecycle phase
                    -->
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>3.2.0</version>
                    <configuration>
                        <descriptors>
                            <descriptor>../lambda_deployment_package_assembly.xml</descriptor>
                        </descriptors>
                        <finalName>${project.build.finalName}</finalName>
                        <appendAssemblyId>false</appendAssemblyId>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>single</goal>
                            </goals>
                            <id>lambda_deployment_package_execution</id>
                            <phase>prepare-package</phase>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.version}</version>
                <configuration>
                    <source>${java.source.version}</source>
                    <target>${java.target.version}</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>3.0.0</version>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>8.15</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <configLocation>${checkstyle.config.location}</configLocation>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>jacoco-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <configuration>
                            <haltOnFailure>false</haltOnFailure>
                            <rules>
                                <rule>
                                    <element>CLASS</element>
                                    <excludes>
                                    </excludes>
                                    <limits>
                                        <limit>
                                            <counter>LINE</counter>
                                            <minimum>${min.line.coverage.ratio}</minimum>
                                            <value>COVEREDRATIO</value>
                                        </limit>
                                        <limit>
                                            <counter>BRANCH</counter>
                                            <minimum>${min.branch.coverage.ratio}</minimum>
                                            <value>COVEREDRATIO</value>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <id>check</id>
                    </execution>
                </executions>
                <groupId>org.jacoco</groupId>
                <version>${jacoco.version}</version>
            </plugin>
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <id>attach-sources</id>
                    </execution>
                </executions>
                <groupId>org.apache.maven.plugins</groupId>
                <version>${maven-source-plugin.version}</version>
            </plugin>
            <plugin>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <configuration>
                            <rules>
                                <banCircularDependencies/>
                                <dependencyConvergence/>
                                <requireUpperBoundDeps/>
                            </rules>
                            <skip>${validate.library.version.skip}</skip>
                        </configuration>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <id>validate-library-version</id>
                    </execution>
                </executions>
                <groupId>org.apache.maven.plugins</groupId>
                <version>3.0.0-M2</version>
            </plugin>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <configuration>
                            <failBuild>${analyze.dependency.failBuild}</failBuild>
                            <ignoreDirect>false</ignoreDirect>
                            <skip>${analyze.dependency.skip}</skip>
                        </configuration>
                        <goals>
                            <goal>analyze-dep-mgt</goal>
                            <goal>analyze-duplicate</goal>
                        </goals>
                        <id>analyze-dependency</id>
                        <phase>validate</phase>
                    </execution>
                    <execution>
                        <configuration>
                            <failOnWarning>${analyze.used.library.failOnWarning}</failOnWarning>
                            <ignoreNonCompile>false</ignoreNonCompile>
                            <ignoredUnusedDeclaredDependencies>
                                <ignoredUnusedDeclaredDependency>org.projectlombok:lombok
                                </ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>com.amazonaws:aws-xray-recorder-sdk-aws-sdk
                                </ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>com.amazonaws:aws-xray-recorder-sdk-apache-http
                                </ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>com.amazonaws:aws-xray-recorder-sdk-core
                                </ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>com.amazonaws:aws-xray-recorder-sdk-aws-sdk-instrumentor
                                </ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>com.amazonaws:aws-lambda-java-log4j2
                                </ignoredUnusedDeclaredDependency>
                				<ignoredUnusedDeclaredDependency>org.apache.logging.log4j:log4j-core
                				</ignoredUnusedDeclaredDependency>
                				<ignoredUnusedDeclaredDependency>org.apache.logging.log4j:log4j-api
                				</ignoredUnusedDeclaredDependency>
                				<ignoredUnusedDeclaredDependency>com.hamburger.company:reposensecloud-logging
                				</ignoredUnusedDeclaredDependency>
                            </ignoredUnusedDeclaredDependencies>
                            <ignoredUsedUndeclaredDependencies>
                                <ignoredUsedUndeclaredDependency>
                                    org.apache.logging.log4j:log4j-core
                                </ignoredUsedUndeclaredDependency>
                                <ignoredUsedUndeclaredDependency>
                                    org.apache.logging.log4j:log4j-api
                                </ignoredUsedUndeclaredDependency>
                            </ignoredUsedUndeclaredDependencies>
                            <skip>${analyze.used.library.skip}</skip>
                        </configuration>
                        <goals>
                            <goal>analyze-only</goal>
                        </goals>
                        <id>analyze-used-library</id>
                    </execution>
                </executions>
                <groupId>org.apache.maven.plugins</groupId>
                <version>3.1.1</version>
            </plugin>
        </plugins>
    </build>
</project>
