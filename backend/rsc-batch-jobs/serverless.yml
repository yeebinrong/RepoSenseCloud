service: aws-batch-java-job

provider:
  name: aws
  region: ap-southeast-1
  runtime: java21
  memorySize: 512
  stage: ${opt:stage, 'dev'}

resources:
  Resources:
    # Compute Environment
    BatchComputeEnvironment:
      Type: AWS::Batch::ComputeEnvironment
      Properties:
        ComputeEnvironmentName: rsc-java-compute-env
        Type: MANAGED
        State: ENABLED
        ComputeResources:
          Type: FARGATE_SPOT
          MaxvCpus: 8
          Subnets:
            - subnet-087cfc237c112654d
          SecurityGroupIds:
            - sg-0912ca4fe0ca0fea6

    # Job Queue
    BatchJobQueue:
      Type: AWS::Batch::JobQueue
      Properties:
        JobQueueName: JavaBatchJobQueue
        State: ENABLED
        Priority: 1
        ComputeEnvironmentOrder:
          - Order: 1
            ComputeEnvironment: !Ref BatchComputeEnvironment

    BatchExecutionRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: BatchExecutionRole
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - ecs-tasks.amazonaws.com
              Action:
                - sts:AssumeRole
        Policies:
          - PolicyName: BatchExecutionPolicy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                    - ecr:GetDownloadUrlForLayer
                    - ecr:BatchGetImage
                    - ecr:GetAuthorizationToken
                    - s3:GetObject
                    - ecs:RunTask
                    - ecs:DescribeTasks
                    - ecs:StopTask
                    - iam:PassRole
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                    - ecr:GetAuthorizationToken
                    - ecr:BatchCheckLayerAvailability
                    - ecr:GetDownloadUrlForLayer
                    - ecr:BatchGetImage
                    - kms:Decrypt
                    - secretsmanager:GetSecretValue
                  Resource: '*'
                - Effect: Allow
                  Action:
                    - ecr:GetAuthorizationToken
                    - ecr:BatchCheckLayerAvailability
                    - ecr:GetDownloadUrlForLayer
                    - ecr:BatchGetImage
                  Resource: "*"  # Optional: Restrict to your ECR repository ARN
                - Effect: Allow
                  Action:
                      - s3:GetObject
                  Resource: "*"

    # Job Definition
    BatchJobDefinition:
      Type: AWS::Batch::JobDefinition
      Properties:
        JobDefinitionName: JavaBatchJob
        PlatformCapabilities:
          - FARGATE
        Type: container
        ContainerProperties:
          Image: 904233118848.dkr.ecr.ap-southeast-1.amazonaws.com/rsc-batch-jobs:latest  # Replace with your container image
          ExecutionRoleArn: !GetAtt BatchExecutionRole.Arn
          ResourceRequirements:
            - Type: MEMORY
              Value: "2048"
            - Type: VCPU
              Value: "1"
          Command:
            - "java"
            - "-jar"
            - "/app/batch-job.jar"
            - "Ref::message"
          FargatePlatformConfiguration:
            PlatformVersion: "LATEST"
          NetworkConfiguration:
            AssignPublicIp: ENABLED
        Parameters:
          message: "defaultMessage"
